# 当前应用名称，用于注册中心计算应用间依赖关系，
# 注意：消费者和提供者应用名不要一样，此参数不是匹配条件，
# 你当前项目叫什么名字就填什么，
# 和提供者消费者角色无关，比如：kylin应用调用了morgan应用的服务，则kylin项目配成kylin，
# morgan项目配成morgan，可能kylin也提供其它服务给别人使用，但kylin项目永远配成kylin，
# 这样注册中心将显示kylin依赖于morgan
dubbo.application.name=application_comsumer
# 日志输出方式，可选：slf4j,jcl,log4j,jdk
dubbo.application.logger=slf4j
# 扫描注解包路径，多个包用逗号分隔，不填pacakge表示扫描当前ApplicationContext中所有的类
dubbo.annotation.package=myself.services.IndexService
# 服务端口
dubbo.protocol.name=dubbo
# 协议端口
dubbo.protocol.port=20880
# 设为true，将向logger中输出访问日志，
# 也可填写访问日志文件路径，直接把访问日志输出到指定文件
dubbo.protocol.accessLog=true
# 服务方法调用超时时间(毫秒)
dubbo.provider.timeout=3000
# 远程服务调用重试次数，不包括第一次调用，不需要重试请设为0
dubbo.provider.retries=1
# 延迟注册服务时间(毫秒)- ，设为-1时，表示延迟到Spring容器初始化完成时暴露服务
dubbo.provider.delay=-1
# 只调用指定协议的服务提供方，其它协议忽略。
dubbo.registr.protocol=zookeeper
# 注册地址
dubbo.registry.address=127.0.0.1:2181
# 该协议的服务是否注册到注册中心
dubbo.registry.register=true
# 是否向此注册中心订阅服务，如果设为false，将只注册，不订阅
dubbo.registry.subscribe=true